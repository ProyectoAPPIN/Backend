//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace com.mercaderia.bono.Entidades.ModeloEntidades
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BilleteraEntities : DbContext
    {
        public BilleteraEntities()
            : base("name=BilleteraEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TipoDocumento> TipoDocumento { get; set; }
        public virtual DbSet<Departamento> Departamento { get; set; }
        public virtual DbSet<Institucion> Institucion { get; set; }
        public virtual DbSet<Municipio> Municipio { get; set; }
        public virtual DbSet<Perfil> Perfil { get; set; }
        public virtual DbSet<RegistroSintoma> RegistroSintoma { get; set; }
        public virtual DbSet<Sintoma> Sintoma { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<Dominio> Dominio { get; set; }
    
        public virtual int AddBonosMasivos(string json, string nombreArchivo, string idEncargado)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var nombreArchivoParameter = nombreArchivo != null ?
                new ObjectParameter("nombreArchivo", nombreArchivo) :
                new ObjectParameter("nombreArchivo", typeof(string));
    
            var idEncargadoParameter = idEncargado != null ?
                new ObjectParameter("idEncargado", idEncargado) :
                new ObjectParameter("idEncargado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddBonosMasivos", jsonParameter, nombreArchivoParameter, idEncargadoParameter);
        }
    
        public virtual int AddGiftCardsMasivos(string json, string nombreArchivo, string idEncargado)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var nombreArchivoParameter = nombreArchivo != null ?
                new ObjectParameter("nombreArchivo", nombreArchivo) :
                new ObjectParameter("nombreArchivo", typeof(string));
    
            var idEncargadoParameter = idEncargado != null ?
                new ObjectParameter("idEncargado", idEncargado) :
                new ObjectParameter("idEncargado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddGiftCardsMasivos", jsonParameter, nombreArchivoParameter, idEncargadoParameter);
        }
    }
}
